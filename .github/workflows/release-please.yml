name: Create PR or Build Foundry Release
on:
  workflow_call:  
    inputs:
      manifest-file: # Must match the manifest file name declared in Foundry
        required: true 
        type: string
      system-name: # Must match the system / module name property in the manifest file
        required: true 
        type: string
permissions: {}
jobs:
  maybe-release:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    outputs:
      is_release_created: ${{ steps.release.outputs.release_created }}
      release_id: ${{ steps.release.outputs.id }}
    steps:
      - name: Release Please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          command: manifest
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node

  release:
    needs: maybe-release
    if: ${{ needs.maybe-release.outputs.is_release_created }}
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          check-latest: true

      - name: Init dependencies
        run: yarn install

      - name: Build project
        run: yarn build

      - name: Create Zip
        id: create_zip
        run: |
          mv dist /tmp/${{ inputs.system-name }}
          cd /tmp/${{ inputs.system-name }}
          zip -r ../${{ inputs.system-name }}.zip *
          ls -al /tmp

      - name: Add the manifest json file & zipped system/module to Release Assets
        uses: xresloader/upload-to-github-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "src/${{ inputs.manifest-file }};/tmp/${{ inputs.system-name }}.zip"
          release_id: ${{ needs.maybe-release.outputs.release_id }}
          overwrite: true
          verbose: true
